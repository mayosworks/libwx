//=============================================================================
// Auxiliary library for Windows API (C++)
//                                                     Copyright (c) 2006 MAYO.
//=============================================================================
#pragma once

#include "wx_critical_section.h"
#include "wx_scoped_lock.h"
#include "wx_buffer.h"

namespace wx {

//-----------------------------------------------------------------------------
//! @class	RingBuffer
//! @brief	リングバッファ
//-----------------------------------------------------------------------------
class RingBuffer
{
public:
	//-------------------------------------------------------------------------
	//! @brief	コンストラクタ
	//-------------------------------------------------------------------------
	RingBuffer();

	//-------------------------------------------------------------------------
	//! @brief	デストラクタ
	//-------------------------------------------------------------------------
	~RingBuffer();

	//-------------------------------------------------------------------------
	//! @brief	リングバッファ初期化
	//!
	//! @param	size		バッファサイズ
	//! @param	retry		リトライを行うか？true:する、false:失敗
	//!
	//! @retval	true		初期化成功
	//! @retval	false		初期化失敗
	//-------------------------------------------------------------------------
	bool Initialize(UINT size, bool retry = true);

	//-------------------------------------------------------------------------
	//! @brief	リングバッファ破棄
	//-------------------------------------------------------------------------
	void Finalize();

	//-------------------------------------------------------------------------
	//! @brief	バッファをクリアする
	//-------------------------------------------------------------------------
	void Clear();

	//-------------------------------------------------------------------------
	//! @brief	データを書き込む
	//!
	//! @param	buffer	書き込むバッファ
	//! @param	size	書き込むサイズ
	//!
	//! @return	書き込んだサイズ
	//-------------------------------------------------------------------------
	UINT Write(void* buffer, UINT size);

	//-------------------------------------------------------------------------
	//! @brief	データを読み取る
	//!
	//! @param	buffer	読み取りバッファ
	//! @param	size	読み取るサイズ
	//!
	//! @return	読み取ったサイズ
	//-------------------------------------------------------------------------
	UINT Read(void* buffer, UINT size);

	//-------------------------------------------------------------------------
	//! @brief	読み取り終了シグナルをセット
	//-------------------------------------------------------------------------
	void ReadEnd();

	//-------------------------------------------------------------------------
	//! @brief	書き込み終了シグナルをセット
	//-------------------------------------------------------------------------
	void WriteEnd();

	//-------------------------------------------------------------------------
	//! @brief	バッファサイズ取得
	//!
	//! @return	バッファサイズ
	//-------------------------------------------------------------------------
	UINT GetBufferSize() const;

	//-------------------------------------------------------------------------
	//! @brief	バッファの空きサイズを取得
	//!
	//! @return	バッファの空きサイズ
	//-------------------------------------------------------------------------
	UINT GetFreeSize() const;

	//-------------------------------------------------------------------------
	//! @brief	バッファの使用サイズを取得
	//!
	//! @return	バッファの使用サイズ
	//-------------------------------------------------------------------------
	UINT GetUsedSize() const;

private:
	UINT  ReadData(BYTE*, UINT);
	UINT WriteData(BYTE*, UINT);

private:
	typedef CriticalSection		Lock;
	typedef ScopedLock<Lock>	ALock;

	Buffer	m_buf;
	Lock	m_lock;
	HANDLE	m_rend;
	HANDLE	m_wend;
	bool	m_retry;
	BYTE*	m_spos;
	BYTE*	m_epos;
	BYTE*	m_rpos;
	BYTE*	m_wpos;
	UINT	m_free;
	UINT	m_used;
};

} //namespace wx
