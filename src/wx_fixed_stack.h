//=============================================================================
// Auxiliary library for Windows API (C++)
//                                                     Copyright (c) 2009 MAYO.
//=============================================================================

#pragma once

#include "wx_misc.h"

namespace wx {

//-----------------------------------------------------------------------------
//! @class	FixedStack
//! @brief	階層固定型スタック
//-----------------------------------------------------------------------------
template <typename T, int D = 3, T EMPTY = static_cast<T>(0)>
class FixedStack
{
public:
	FixedStack()
		: m_depth(0)
	{
		for (int i = 0; i < D; ++i) {
			m_value[i] = EMPTY;
		}
	}

	~FixedStack()
	{
	}

	//-------------------------------------------------------------------------
	//! @brief	値を取得する（オペレーター）
	//!
	//! @return	値
	//-------------------------------------------------------------------------
	operator T() const
	{
		return GetValue();
	}

	//-------------------------------------------------------------------------
	//! @brief	値を設定する（オペレーター）
	//!
	//! @param	value		値
	//-------------------------------------------------------------------------
	void operator = (T value)
	{
		SetValue(value);
	}

	//-------------------------------------------------------------------------
	//! @brief	値を取得する
	//!
	//! @return	値
	//-------------------------------------------------------------------------
	T GetValue() const
	{
		return m_value[m_depth];
	}

	//-------------------------------------------------------------------------
	//! @brief	値を設定する
	//!
	//! @param	value		値
	//-------------------------------------------------------------------------
	void SetValue(T value)
	{
		m_value[m_depth] = value;
	}

	//-------------------------------------------------------------------------
	//! @brief	階層を進める
	//-------------------------------------------------------------------------
	void Push(T value)
	{
		WX_ASSERT(m_depth < D);
		if (m_depth < D - 1) {
			++m_depth;
		}

		Set(value);
	}


	//-------------------------------------------------------------------------
	//! @brief	階層を戻す
	//-------------------------------------------------------------------------
	T Pop()
	{
		WX_ASSERT(m_depth > 0);
		T value = GetValue();
		Set(EMPTY);

		if (m_depth > 0) {
			--m_depth;
		}

		return value;
	}


	//-------------------------------------------------------------------------
	//! @brief	現在の階層を取得する
	//!
	//! @return	階層
	//-------------------------------------------------------------------------
	int GetDepth() const
	{
		return m_depth;
	}


private:
	T	m_value[D];
	int	m_depth;
};

} // namespace wx
