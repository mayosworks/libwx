//=============================================================================
// Auxiliary library for Windows API (C++)
//                                                     Copyright (c) 2009 MAYO.
//=============================================================================
#pragma once

#include "wx_misc.h"

namespace wx {

//-----------------------------------------------------------------------------
//! @class	Array
//! @brief	サイズ固定型配列
//-----------------------------------------------------------------------------
template <typename Type, int Length>
class Array
{
public:
	static const int NOT_FOUND = 0xFFFFFFFF;	///< 見つからなかった時の値

public:
	Array()
	{
	}

	//-------------------------------------------------------------------------
	//! @brief	値指定のコンストラクタ
	//!
	//! @param	value		配列に入れる値
	//-------------------------------------------------------------------------
	Array(Type value)
	{
		for (int i = 0; i < Length; ++i) {
			m_data[i] = value;
		}
	}

	~Array()
	{
	}

	//-------------------------------------------------------------------------
	//! @brief	値へのリファレンス取得する（オペレーター）
	//!
	//! @param	index		インデックス
	//!
	//! @return	値
	//-------------------------------------------------------------------------
	Type& operator [](int index)
	{
		WX_ASSERT(index < Length);
		return m_data[index];
	}

	//-------------------------------------------------------------------------
	//! @brief	値を取得する
	//!
	//! @param	index		インデックス
	//!
	//! @return	値
	//-------------------------------------------------------------------------
	Type GetValue(int index) const
	{
		WX_ASSERT(index < Length);
		return m_data[index];
	}

	//-------------------------------------------------------------------------
	//! @brief	値を設定する
	//!
	//! @param	index		インデックス
	//! @param	value		値
	//-------------------------------------------------------------------------
	void SetValue(int index, Type value)
	{
		WX_ASSERT(index < Length);
		m_data[index] = value;
	}

	//-------------------------------------------------------------------------
	//! @brief	指定の値で埋める
	//!
	//! @param	value		値
	//-------------------------------------------------------------------------
	void Fill(Type value)
	{
		for (int i = 0; i < Length; ++i) {
			m_data[i] = value;
		}
	}

	//-------------------------------------------------------------------------
	//! @brief	指定した範囲を指定の値で埋める
	//!
	//! @param	begin		範囲の開始インデックス
	//! @param	end			範囲の終了インデックス
	//! @param	value		値
	//-------------------------------------------------------------------------
	void FillRange(int begin, int end, Type value)
	{
		for (int i = begin; i < end; ++i) {
			m_data[i] = value;
		}
	}

	//-------------------------------------------------------------------------
	//! @brief	配列のサイズ取得する
	//!
	//! @return	配列のサイズ
	//-------------------------------------------------------------------------
	int GetLength() const
	{
		return Length;
	}

	//-------------------------------------------------------------------------
	//! @brief	C/C++関数に渡すための、先頭ポインタを取得
	//!
	//! @return	配列先頭へのポインタ
	//-------------------------------------------------------------------------
	Type* GetPointer()
	{
		return &m_data[0];
	}

	//-------------------------------------------------------------------------
	//! @brief	指定の値の最初のインデックスを返す
	//!
	//! @return	見つかったインデックス、見つからない場合は、NOT_FOUNDを返す
	//-------------------------------------------------------------------------
	int IndexOf(Type value) const
	{
		for (int i = 0; i < Length; ++i) {
			if (m_data[i] == value) {
				return i;
			}
		}

		return NOT_FOUND;
	}

private:
	Type	m_data[Length];
};

} // namespace wx
